C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      12/11/2023 15:27:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE THU_VIEN_LCD
OBJECT MODULE PLACED IN .\Objects\Thu_Vien_LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD4bit\Thu_Vien_LCD.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\LCD4bit;.\User)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\Thu_Vien_LCD.lst) TABS(2) OBJECT(.\Objects\Thu_Vien_LCD.obj)

line level    source

   1          #include <REGX51.H>
   2          #include <Thu_Vien_LCD.h>
   3          
   4          
   5          #define LCD_RS  P2_0
   6          #define LCD_RW  P2_1
   7          #define LCD_EN  P2_2
   8          #define LCD_D4  P2_4
   9          #define LCD_D5  P2_5
  10          #define LCD_D6  P2_6
  11          #define LCD_D7  P2_7
  12          
  13          void delay_us(unsigned int t){
  14   1              unsigned int i;
  15   1              for(i=0;i<t;i++);
  16   1      }
  17          
  18          void delay_ms(unsigned int t){
  19   1              unsigned int i,j;
  20   1              for(i=0;i<t;i++)
  21   1              for(j=0;j<125;j++);}
  22          
  23          void LCD_Enable(void){
  24   1              LCD_EN =1;
  25   1              delay_us(3);
  26   1              LCD_EN =0;
  27   1              delay_us(50); 
  28   1      }
  29          
  30          void LCD_Send4Bit(unsigned char Data){
  31   1              LCD_D4=Data & 0x01;
  32   1              LCD_D5=(Data>>1)&1;
  33   1              LCD_D6=(Data>>2)&1;
  34   1              LCD_D7=(Data>>3)&1;
  35   1      }
  36          
  37          void LCD_SendCommand(unsigned char command){
  38   1              LCD_Send4Bit(command >>4);/* Send 4 bit high */
  39   1              LCD_Enable();
  40   1              LCD_Send4Bit(command); /* Send 4 bit low*/
  41   1              LCD_Enable();
  42   1      }
  43          
  44          void LCD_Clear(){// Xoa man hinh
  45   1              LCD_SendCommand(0x01); 
  46   1              delay_us(10);
  47   1      }
  48          
  49          void LCD_Init(){
  50   1              LCD_Send4Bit(0x00);   //turn on LCD
  51   1              delay_ms(20);
  52   1              LCD_RS=0;
  53   1              LCD_RW=0;
  54   1              LCD_Send4Bit(0x03);   //function setting
C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      12/11/2023 15:27:55 PAGE 2   

  55   1              LCD_Enable();
  56   1              delay_ms(5);
  57   1              LCD_Enable();
  58   1              delay_us(100);
  59   1              LCD_Enable();
  60   1              LCD_Send4Bit(0x02);   //di chuyen con tro ve dau man hnh
  61   1              LCD_Enable();
  62   1              LCD_SendCommand( 0x28 ); //lua chon che do 4 bit
  63   1              LCD_SendCommand( 0x0c);  // bat hien thi va tat con tro di
  64   1              LCD_SendCommand( 0x06 );
  65   1              LCD_SendCommand(0x01);
  66   1      }
  67          
  68          void LCD_Gotoxy(unsigned char x, unsigned char y){
  69   1              unsigned char address;
  70   1              if(!y)address=(0x80+x);
  71   1              else address=(0xc0+x);
  72   1              delay_us(1000);
  73   1              LCD_SendCommand(address);
  74   1              delay_us(50);
  75   1      }
  76          
  77          void LCD_PutChar(unsigned char Data){
  78   1              LCD_RS=1;
  79   1              LCD_SendCommand(Data);
  80   1              LCD_RS=0 ;
  81   1      }
  82          
  83          void LCD_Puts(char *s){
  84   1              while (*s){
  85   2                      LCD_PutChar(*s);
  86   2                      s++;
  87   2              }
  88   1      }
  89          
  90          void LCD_PutNumber(int number)
  91          {
  92   1        if(number <= 9)
  93   1        {
  94   2          LCD_PutChar(number + 48);
  95   2        }
  96   1        else if(number > 9 && number < 100)
  97   1        {
  98   2          LCD_PutChar(number/10 + 48);
  99   2          LCD_PutChar(number%10 + 48);
 100   2        }
 101   1        else if(number > 99 && number < 1000)
 102   1        {
 103   2          LCD_PutChar(number/100 + 48);
 104   2          LCD_PutChar(number/10%10 + 48);
 105   2          LCD_PutChar(number%10 + 48);
 106   2        }
 107   1        else if(number > 999 && number < 10000)
 108   1        {
 109   2          LCD_PutChar(number/1000 + 48);
 110   2          LCD_PutChar(number/100%10 + 48);
 111   2          LCD_PutChar(number/10%10 + 48);
 112   2          LCD_PutChar(number%10 + 48);
 113   2        }
 114   1      }


C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      12/11/2023 15:27:55 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    516    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
