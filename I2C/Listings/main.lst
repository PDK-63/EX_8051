C51 COMPILER V9.60.7.0   MAIN                                                              12/12/2023 14:08:19 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\LCD4bit;.\User) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2            Bai toan hien thi thoi gian thuc DS1307 len man hinh LCD
   3            LCD su dung 16x02, 4bit(D4 - D7)
   4            Su dung DS1307, giao tiep qua chuan I2C, 2 chan SCL va SDA phai co tro keo len duong nguon( thuong 4.7K)
   5            
   6          */
   7          #include "REGX51.H"
   8          #include "string.h"
   9          #include "stdio.h"
  10          
  11          // Dinh nghia cac chan LCD
  12          sbit D0 = P2^0;           // Chan D0 LCD
  13          sbit D1 = P2^1;           // Chan D1 LCD
  14          sbit D2 = P2^2;           // Chan D2 LCD
  15          sbit D3 = P2^3;
  16          sbit D4 = P2^4;
  17          sbit D5 = P2^5;
  18          sbit D6 = P2^6;
  19          sbit D7 = P2^7;           // Chan D7 LCD
  20          
  21          sbit RS = P3^0;
  22          sbit RW = P3^1;
  23          sbit EN = P3^2;
  24          
  25          // Dinh nghia chan I2C cua DS1307
  26          sbit SCL = P1^0;
  27          sbit SDA = P1^1;
  28          
  29          char day[7][3] = {"CN", "T2", "T3", "T4", "T5", "T6", "T7"};
  30          void Lcd_Cauhinh(void);   // Khoi tao LCD
  31          void Lcd_Ghi_Lenh(char lenh);   // Ghi lenh
  32          void Lcd_Ghi_Dulieu(char dulieu); // Ham Ghi du lieu
  33          void LCD_Ghi_Chuoi(char *str);
  34          void Delay(int t);
  35          
  36          // ham xuat du lieu
  37          void Lcd_Dulieu(unsigned char dulieu){
  38   1        D0 = dulieu & 0x01;
  39   1        D1 = (dulieu >> 1) & 0x01;
  40   1        D2 = (dulieu >> 2) & 0x01;
  41   1        D3 = (dulieu >> 3) & 0x01;
  42   1        D4 = (dulieu >> 4) & 0x01;
  43   1        D5 = (dulieu >> 5) & 0x01;
  44   1        D6 = (dulieu >> 6) & 0x01;
  45   1        D7 = (dulieu >> 7) & 0x01;
  46   1      }
  47          
  48          void Lcd_Cauhinh(void){
  49   1        Lcd_Ghi_Lenh(0x03);
  50   1        Lcd_Ghi_Lenh(0x38);         // Giao tiep voi XL 8 chan(D0 - D7)
  51   1        // Lcd_Ghi_Lenh(0x28);      // Giao tiep voi VXL 4 chan(D4 - D7)
  52   1        Lcd_Ghi_Lenh(0x06);         // Tu dong dua con tro den tri tri tiep theo (trai -> phai)
  53   1        Lcd_Ghi_Lenh(0x0c);         // Bat hien thi con tro
  54   1        Lcd_Ghi_Lenh(0x01);         // Xoa man hinh
C51 COMPILER V9.60.7.0   MAIN                                                              12/12/2023 14:08:19 PAGE 2   

  55   1      }
  56          
  57          void Lcd_Ghi_Lenh(char lenh){
  58   1        RS = 0;                     // muc thap, chon che do ghi lenh
  59   1        RW = 0;                     // muc thap, chon che do thanh ghi  
  60   1        EN = 1;                     // muc cao, chuan bi tao su chuyen muc logic tu "1" -> "0" tao tin hieu cho phep ghi
  61   1        Lcd_Dulieu(lenh);
  62   1        Delay(10);
  63   1        EN = 0;                     // muc thap, hoan tat su tao chuyen muc logic "1" sang "0"
  64   1        Delay(10);
  65   1      }
  66          
  67          
  68          void Lcd_Ghi_Dulieu(char dulieu){
  69   1        RS = 1;               
  70   1        RW = 0;
  71   1        EN = 1;
  72   1        Lcd_Dulieu(dulieu);
  73   1        Delay(10);
  74   1        EN = 0;
  75   1        Delay(10);
  76   1      }
  77          
  78          void LCD_Ghi_Chuoi(char *str){
  79   1        while(*str){
  80   2          Lcd_Ghi_Dulieu(*str);
  81   2          str++;
  82   2        }
  83   1      }
  84          
  85          // Bat dau che I2C
  86          void I2C_Start(void){
  87   1        /* \
  88   1          XUng Clock chuyen tu muc thap len muc ca0 SCL: 0 -> 1
  89   1          Dong thoi chan du lieu chuyen tu muc cao xuong thap: 1 -> 0
  90   1        */
  91   1        SCL = 0;
  92   1        SDA = 1;
  93   1        SCL = 1;
  94   1        SDA = 0;
  95   1      }
  96          
  97          void I2C_Stop(void){
  98   1        SCL = 0;
  99   1        SDA = 0;
 100   1        SCL = 1;
 101   1        SDA = 1;
 102   1      }
 103          void I2C_Restart(void){
 104   1        SCL = 0;
 105   1        SDA = 1;
 106   1        SCL = 1;
 107   1        SDA = 0;
 108   1      }
 109          /* 
 110          bit ACK/NACK: Moi khung trong 1 tin nhan theo sau boi 1 bit xaac nhan/ khong xac nhan
 111                  Neu khung dia chi hoac du lieu nhan thanh cong, bit ACK tra lai lai bi master
 112          
 113          */
 114          void I2C_ACK(){
 115   1        SCL = 0;
 116   1        SDA = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              12/12/2023 14:08:19 PAGE 3   

 117   1        SCL = 1;
 118   1        while(SDA == 1);
 119   1      }
 120          
 121          void I2C_NOACK(){
 122   1        SCL = 0;
 123   1        SDA = 1;
 124   1        SCL = 1;
 125   1      }
 126          
 127          // Write
 128          void I2C_Write(unsigned char dulieu){
 129   1        unsigned char i;
 130   1        for(i = 0; i < 8; i++){
 131   2          SCL = 0;              // keo chan SCL ve muc thap(xac dinh bat dau 1 bit du lieu)
 132   2          SDA = (dulieu & (0x80 >> i)) ? 1 : 0;     // Ghi gia tri tuong ung tu dulieu vao chan SDA
 133   2          SCL = 1;              // Keo chan SCL len muc cao xâc nhan bit du lieu
 134   2        }
 135   1      }
 136          
 137          // Read
 138          unsigned char I2C_Read(void){
 139   1          unsigned char i, tmp = 0;
 140   1          for(i = 0; i < 8; i++){
 141   2            SCL = 0;          // Bat dau doc chu ky 
 142   2            SCL = 1;          // keo chan SCL len cao doc bit tiep theo
 143   2            if(SDA){          // kiem tra chan SDA neu dang o muc cao
 144   3              tmp = tmp | (0x80 >> i);      // tra ve bit tuong ung trong bien 'tmp' neu chan SDA = 1
 145   3            }
 146   2          }
 147   1          return tmp;
 148   1      }
 149          
 150          unsigned char I2C_Data_Write(unsigned char tm, unsigned char buf, unsigned dulieu){
 151   1        I2C_Start();              //   Bat daua che do I2C
 152   1        I2C_Write(tm & 0XFE);     //    Thiet bi master gui 8bit (0xfe = 11111110)
 153   1        I2C_ACK();                // Thiet bi master nhan tin hieu tu slave
 154   1        I2C_Write(buf);           //  Thiet bi Master gui 8 bit
 155   1        I2C_ACK();                // Thiet bi master nhan tin hieu tu slave
 156   1        I2C_Write(dulieu);        // du lieu tu master ghi vao dia chi
 157   1        I2C_ACK();
 158   1        I2C_Stop();
 159   1        Delay(10);
 160   1      }
*** WARNING C173 IN LINE 160 OF main.c: missing return-expression
 161          
 162          unsigned char I2C_Data_Read(unsigned char tm, unsigned char bufAdd){
 163   1        unsigned char buf;
 164   1        I2C_Start();  
 165   1        I2C_Write(tm & 0XFE); 
 166   1        I2C_ACK();  
 167   1        I2C_Write(bufAdd);    
 168   1        I2C_ACK();
 169   1        I2CRestart();
*** WARNING C206 IN LINE 169 OF main.c: 'I2CRestart': missing function-prototype
 170   1        I2C_Write(tm | 1);
 171   1        I2C_ACK();
 172   1        buf = I2C_Read();
 173   1        I2C_NOACK();
 174   1        I2C_Stop();
 175   1        return buf;
 176   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              12/12/2023 14:08:19 PAGE 4   

 177          
 178          void Clock(void){
 179   1        unsigned char t;
 180   1        char day1[3] = {0};
 181   1        Lcd_Ghi_Lenh(0x81);
 182   1        t = I2C_Data_Read(0xd0, 0x02);        // Thanh ghi dia chi 02 cho Gio
 183   1        Lcd_Ghi_Dulieu((t / 16) + 48);
 184   1        Lcd_Ghi_Dulieu((t % 16) + 48);
 185   1        Lcd_Ghi_Dulieu(':');
 186   1        
 187   1        t = I2C_Data_Read(0xd0, 0x01);        // Thanh ghi dia chi 01 cho phut  
 188   1        Lcd_Ghi_Dulieu((t / 16) + 48);
 189   1        Lcd_Ghi_Dulieu((t % 16) + 48);
 190   1        Lcd_Ghi_Dulieu(':');
 191   1        
 192   1        t = I2C_Data_Read(0xd0, 0x00);        // Thanh ghi dia chi 00 cho giay
 193   1        Lcd_Ghi_Dulieu((t / 16) + 48);
 194   1        Lcd_Ghi_Dulieu((t % 16) + 48);
 195   1        Lcd_Ghi_Dulieu(':');
 196   1        
 197   1        Lcd_Ghi_Lenh(0x8C);
 198   1        t = I2C_Data_Read(0xD0, 0x03);        // Thanh ghi dia chi 00 cho giay
 199   1        sprintf(day1, "s", day[t]);
 200   1        LCD_Ghi_Chuoi(day1);
 201   1        
 202   1        Lcd_Ghi_Lenh(0xC1);
 203   1        t = I2C_Data_Read(0xd0, 0x04);        // Thanh ghi dia chi 00 cho giay
 204   1        Lcd_Ghi_Dulieu((t / 16) + 48);
 205   1        Lcd_Ghi_Dulieu((t % 16) + 48);
 206   1        Lcd_Ghi_Dulieu('/');
 207   1        
 208   1        t = I2C_Data_Read(0xd0, 0x05);        // Thanh ghi dia chi 00 cho giay
 209   1        Lcd_Ghi_Dulieu((t / 16) + 48);
 210   1        Lcd_Ghi_Dulieu((t % 16) + 48);
 211   1        Lcd_Ghi_Dulieu('/');
 212   1        
 213   1        t = I2C_Data_Read(0xD0, 0x06);        // Thanh ghi dia chi 00 cho giay
 214   1        LCD_Ghi_Chuoi("20");
 215   1        Lcd_Ghi_Dulieu((t / 16) + 48);
 216   1        Lcd_Ghi_Dulieu((t % 16) + 48);
 217   1      }
 218          
 219          int main(){
 220   1        Lcd_Cauhinh();
 221   1        Lcd_Ghi_Lenh(0x01);
 222   1        Lcd_Ghi_Lenh(0x80);
 223   1        LCD_Ghi_Chuoi("Xin chao");
 224   1        Delay(200);
 225   1        Lcd_Ghi_Lenh(0x01);
 226   1        while(1){
 227   2          Clock();
 228   2          Delay(300);
 229   2        }
 230   1        return 0;
 231   1      }
 232          
 233          void Delay(int t){
 234   1        int x, y;
 235   1        for(x = 0; x < t; x++){
 236   2          for(y = 0; y < 123; y++);
 237   2        }
 238   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              12/12/2023 14:08:19 PAGE 5   

 239          
*** WARNING C290 IN LINE 160 OF main.c: missing return value
*** WARNING C294 IN LINE 230 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    665    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
